workflows:
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120

    integrations:
      app_store_connect: codemagic

    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.taipeiads.todate.webview
      vars:
        # App Store Connect > 你的 App > App Information > Apple ID（數字）
        APP_APPLE_ID: "6751520810"
        # 可選：若你的 Apple 帳號有多個 Team，可放 TEAM_ID 幫助鎖定
        TEAM_ID: "53M79C2XFB"
        IOS_SCHEME: "Runner"
      flutter: stable
      xcode: 16.2
      cocoapods: default

    scripts:
      - name: "Set up code signing"
        script: |
          # 若有 TEAM_ID，就用它鎖定；沒有也沒關係，會用 Integrations 的預設 Team
          xcode-project use-profiles --team-id "$TEAM_ID" || xcode-project use-profiles

      - name: "Debug bundle id / team (useful if it fails)"
        script: |
          set -euxo pipefail
          cd ios
          xcodebuild -showBuildSettings -scheme Runner -configuration Release | grep -E "PRODUCT_BUNDLE_IDENTIFIER|DEVELOPMENT_TEAM" || true
          cd -

      - name: "Prebuild"
        script: |
          set -euxo pipefail
          flutter clean
          rm -rf ios/Pods ios/Podfile.lock
          flutter pub get
          INFO_PLIST="ios/Runner/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :UILaunchStoryboardName LaunchScreen" "$INFO_PLIST" || true
          cd ios && pod repo update && pod install && cd -
          plutil -p "$INFO_PLIST" || true

      - name: "Next build number from TestFlight"
        script: |
          set -euxo pipefail
          LATEST=$(app-store-connect get-latest-testflight-build-number $APP_APPLE_ID --platform IOS || true)
          NEXT=${LATEST:+$((LATEST+1))}
          : "${NEXT:=1}"
          echo "Next build number: $NEXT"
          cd ios && agvtool new-version -all $NEXT && cd -

      - name: "Build IPA"
        script: |
          set -euxo pipefail
          flutter build ipa --release --build-name=1.0.0 -v

      - name: "Collect Xcode logs"
        script: |
          mkdir -p /tmp/xcodebuild_logs || true
          find ~/Library/Logs -name "*.log" -print0 | xargs -0 -I{} cp "{}" /tmp/xcodebuild_logs/ || true

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive
      - "/tmp/xcodebuild_logs/*.log"
      - flutter_drive.log
      - "**/xcodebuild*.log"

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
        submit_to_app_store: false
